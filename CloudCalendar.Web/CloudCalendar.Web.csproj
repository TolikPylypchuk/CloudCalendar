<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DocumentationFile>bin\Debug\netcoreapp2.0\CloudCalendar.Web.xml</DocumentationFile>
    <NoWarn>1701;1702;1705;1591</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AutoMapper" Version="6.1.1" />
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="3.0.1" />
    <PackageReference Include="Microsoft.AspNetCore.All" Version="2.0.0" />
    <PackageReference Include="Newtonsoft.Json" Version="10.0.3" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="1.0.0" />
  </ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Tools" Version="2.0.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Files not to publish (note that the 'dist' subfolders are re-added below) -->
    <Content Remove="ClientApp\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove=".gitignore" />
    <None Remove="ClientApp\app\common\services\config.service.ts" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\CloudCalendar.Data\CloudCalendar.Data.csproj" />
    <ProjectReference Include="..\CloudCalendar.Schedule\CloudCalendar.Schedule.csproj" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\app\common\services\config.service.ts" />
  </ItemGroup>

  <ItemGroup>
    <Content Update="package-lock.json">
      <DependentUpon>package.json</DependentUpon>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <None Update="ClientApp\app\account\components\login.component.html">
      <DependentUpon>login.component.ts</DependentUpon>
    </None>
    <None Update="ClientApp\app\admin\components\building-modal.component.html">
      <DependentUpon>building-modal.component.ts</DependentUpon>
    </None>
    <None Update="ClientApp\app\admin\components\classroom-modal.component.html">
      <DependentUpon>classroom-modal.component.ts</DependentUpon>
    </None>
    <None Update="ClientApp\app\admin\components\department-modal.component.html">
      <DependentUpon>department-modal.component.ts</DependentUpon>
    </None>
    <None Update="ClientApp\app\admin\components\faculty-modal.component.html">
      <DependentUpon>faculty-modal.component.ts</DependentUpon>
    </None>
    <None Update="ClientApp\app\admin\components\lecturer-modal.component.html">
      <DependentUpon>lecturer-modal.component.ts</DependentUpon>
    </None>
    <None Update="ClientApp\app\admin\components\settings.component.html">
      <DependentUpon>settings.component.ts</DependentUpon>
    </None>
    <None Update="ClientApp\app\admin\components\subject-modal.component.html">
      <DependentUpon>subject-modal.component.ts</DependentUpon>
    </None>
    <None Update="ClientApp\app\admin\components\student-modal.component.html">
      <DependentUpon>student-modal.component.ts</DependentUpon>
    </None>
    <None Update="ClientApp\app\admin\components\users.component.html">
      <DependentUpon>users.component.ts</DependentUpon>
    </None>
    <None Update="ClientApp\app\app.component.html">
      <DependentUpon>app.component.ts</DependentUpon>
    </None>
    <None Update="ClientApp\app\app.module.browser.ts">
      <DependentUpon>app.module.shared.ts</DependentUpon>
    </None>
    <None Update="ClientApp\app\app.module.server.ts">
      <DependentUpon>app.module.shared.ts</DependentUpon>
    </None>
    <None Update="ClientApp\app\lecturer\calendar\calendar.component.html">
      <DependentUpon>calendar.component.ts</DependentUpon>
    </None>
    <None Update="ClientApp\app\lecturer\calendar\modal\modal-comments.component.html">
      <DependentUpon>modal-comments.component.ts</DependentUpon>
    </None>
    <None Update="ClientApp\app\lecturer\calendar\modal\modal-content.component.html">
      <DependentUpon>modal-content.component.ts</DependentUpon>
    </None>
    <None Update="ClientApp\app\lecturer\calendar\modal\modal-homework.component.html">
      <DependentUpon>modal-homework.component.ts</DependentUpon>
    </None>
    <None Update="ClientApp\app\lecturer\calendar\modal\modal-materials.component.html">
      <DependentUpon>modal-materials.component.ts</DependentUpon>
    </None>
    <None Update="ClientApp\app\navigation.component.html">
      <DependentUpon>navigation.component.ts</DependentUpon>
    </None>
    <None Update="ClientApp\app\student\calendar\calendar.component.html">
      <DependentUpon>calendar.component.ts</DependentUpon>
    </None>
    <None Update="ClientApp\app\student\calendar\modal\modal-comments.component.html">
      <DependentUpon>modal-comments.component.ts</DependentUpon>
    </None>
    <None Update="ClientApp\app\student\calendar\modal\modal-content.component.html">
      <DependentUpon>modal-content.component.ts</DependentUpon>
    </None>
    <None Update="ClientApp\app\student\calendar\modal\modal-homework.component.html">
      <DependentUpon>modal-homework.component.ts</DependentUpon>
    </None>
    <None Update="ClientApp\app\student\calendar\modal\modal-materials.component.html">
      <DependentUpon>modal-materials.component.ts</DependentUpon>
    </None>
    <None Update="ClientApp\app\view\components\group.component.html">
      <DependentUpon>group.component.ts</DependentUpon>
    </None>
    <None Update="ClientApp\app\view\components\groups.component.html">
      <DependentUpon>groups.component.ts</DependentUpon>
    </None>
    <None Update="ClientApp\app\view\components\lecturer.component.html">
      <DependentUpon>lecturer.component.ts</DependentUpon>
    </None>
    <None Update="ClientApp\app\view\components\lecturers.component.html">
      <DependentUpon>lecturers.component.ts</DependentUpon>
    </None>
    <None Update="ClientApp\app\view\components\notifications.component.html">
      <DependentUpon>notifications.component.ts</DependentUpon>
    </None>
  </ItemGroup>

  <Target Name="DebugRunWebpack" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('wwwroot\dist') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />

    <!-- In development, the dist files won't exist on the first run or when cloning to
         a different machine, so rebuild them if not already present. -->
    <Message Importance="high" Text="Performing first-run Webpack build..." />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js" />
    <Exec Command="node node_modules/webpack/bin/webpack.js" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec Command="npm install" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js --env.prod" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --env.prod" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="wwwroot\dist\**; ClientApp\dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>